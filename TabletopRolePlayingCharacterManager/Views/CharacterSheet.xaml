<Page
	x:Class="TabletopRolePlayingCharacterManager.Views.CharacterSheet"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:TabletopRolePlayingCharacterManager"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:vm="using:TabletopRolePlayingCharacterManager.ViewModel"
	xmlns:controls="using:TabletopRolePlayingCharacterManager.Controls">
	<Page.DataContext>
		<vm:CharacterSheetViewModel/>
	</Page.DataContext>


	<Page.BottomAppBar>
		<CommandBar>
			<AppBarButton Icon="Save" Label="Save"
						  Command="{Binding SaveCharacter}"
						  Name="SaveButton"/>
			<AppBarButton Icon="Delete" Label="Delete"
						  Click="DeleteCharacterClick">
				<AppBarButton.Flyout>
					<Flyout>
						<StackPanel>
							<TextBlock Text="Are you sure you want to delete this character?&#x0a;This action cannot be undone."/>
							<Button Content="Yes" Width="96" Margin="0, 12, 0, 0"
									Command="{Binding DeleteCharacter}"/>
						</StackPanel>
					</Flyout>
				</AppBarButton.Flyout>
			</AppBarButton>

		</CommandBar>
	</Page.BottomAppBar>

	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Assets/TemplateDictionary.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="TabsStylePivotStyle" TargetType="Pivot">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Pivot">
							<Grid x:Name="RootElement"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}"
							Background="{TemplateBinding Background}">

								<Grid.Resources>
									<Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
										<Setter Property="FontFamily" Value="Segoe UI" />
										<Setter Property="FontWeight" Value="SemiBold" />
										<Setter Property="FontSize" Value="15" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ContentControl">
													<ContentPresenter
													Margin="{TemplateBinding Padding}"
													HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													ContentTransitions="{TemplateBinding ContentTransitions}"
													OpticalMarginAlignment="TrimSideBearings" />
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>

									<Style x:Key="TitleContentControlStyle" BasedOn="{StaticResource BaseContentControlStyle}" TargetType="ContentControl">
										<Setter Property="FontWeight" Value="SemiLight" />
										<Setter Property="FontSize" Value="24" />
									</Style>

									<!-- While used here to remove the spacing between header items, the 
								template can also be used to
								display custom 'selected' visuals -->
									<Style TargetType="PivotHeaderItem">
										<Setter Property="Padding" Value="0" />
										<Setter Property="BorderBrush" Value="{StaticResource SystemAccentColor}"/>
										<Setter Property="BorderThickness" Value="0, 0, 0, 8"/>
										<!--<Setter Property="Margin" Value="0, 0, 0, 8"/>-->
										<Setter Property="Height" Value="52"/>
									</Style>
								</Grid.Resources>

								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="Orientation">
										<VisualState x:Name="Portrait">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Landscape">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>

									<VisualStateGroup x:Name="HeaderStates">
										<VisualState x:Name="HeaderDynamic" />
										<VisualState x:Name="HeaderStatic">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="StaticHeader" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<ContentControl x:Name="TitleContentControl"
								Margin="{StaticResource PivotPortraitThemePadding}"
								Content="{TemplateBinding Title}"
								ContentTemplate="{TemplateBinding TitleTemplate}"
								IsTabStop="False"
								Style="{StaticResource TitleContentControlStyle}"
								Visibility="Collapsed" />

								<Grid Grid.Row="1">

									<Grid.Resources>
										<ResourceDictionary>
											<ResourceDictionary.ThemeDictionaries>
												<ResourceDictionary x:Key="Default">
													<SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
													<SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
												</ResourceDictionary>
												<ResourceDictionary x:Key="Light">
													<SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
													<SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemChromeMediumColor}" />
												</ResourceDictionary>
												<ResourceDictionary x:Key="HighContrast">
													<SolidColorBrush x:Key="SystemControlPageBackgroundChromeMediumBrush" Color="{ThemeResource SystemColorWindowColor}" />
													<SolidColorBrush x:Key="SystemControlForegroundChromeMediumBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
												</ResourceDictionary>
											</ResourceDictionary.ThemeDictionaries>
										</ResourceDictionary>
									</Grid.Resources>

									<ScrollViewer x:Name="ScrollViewer"
									Margin="{TemplateBinding Padding}"
									VerticalContentAlignment="Stretch"
									BringIntoViewOnFocusChange="False"
									HorizontalScrollBarVisibility="Hidden"
									HorizontalSnapPointsAlignment="Center"
									HorizontalSnapPointsType="MandatorySingle"
									Template="{StaticResource ScrollViewerScrollBarlessTemplate}"
									VerticalScrollBarVisibility="Disabled"
									VerticalScrollMode="Disabled"
									VerticalSnapPointsType="None"
									ZoomMode="Disabled">
										<PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
											<Grid x:Name="PivotLayoutElement" >
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="*" />
												</Grid.RowDefinitions>

												<!-- By setting the column definitions to *,Auto,* allows the tabs to be centered by default -->
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<Grid.RenderTransform>
													<CompositeTransform x:Name="PivotLayoutElementTranslateTransform" />
												</Grid.RenderTransform>

												<!--  This border is used as a backplate for the header area  -->
												<Border
												Grid.ColumnSpan="3"
												Background="{ThemeResource SystemControlPageBackgroundChromeMediumBrush}"
												BorderBrush="{ThemeResource SystemControlForegroundChromeMediumBrush}"
												BorderThickness="0,0,0,1" />

												<ContentPresenter x:Name="LeftHeaderPresenter"
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												Content="{TemplateBinding LeftHeader}"
												ContentTemplate="{TemplateBinding LeftHeaderTemplate}" />
												<ContentControl x:Name="HeaderClipper"
												Grid.Column="1"
												HorizontalContentAlignment="Stretch"
												UseSystemFocusVisuals="True">
													<ContentControl.Clip>
														<RectangleGeometry x:Name="HeaderClipperGeometry" />
													</ContentControl.Clip>
													<Grid Background="Transparent">
														<PivotHeaderPanel x:Name="StaticHeader" Visibility="Visible" />
														<PivotHeaderPanel x:Name="Header">
															<PivotHeaderPanel.RenderTransform>
																<TransformGroup>
																	<CompositeTransform x:Name="HeaderTranslateTransform" />
																	<CompositeTransform x:Name="HeaderOffsetTranslateTransform" />
																</TransformGroup>
															</PivotHeaderPanel.RenderTransform>
														</PivotHeaderPanel>
													</Grid>
												</ContentControl>

												<ContentPresenter x:Name="RightHeaderPresenter"
												Grid.Column="2"
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												Content="{TemplateBinding RightHeader}"
												ContentTemplate="{TemplateBinding RightHeaderTemplate}" />
												<ItemsPresenter x:Name="PivotItemPresenter" Grid.Row="1" Grid.ColumnSpan="3">
													<ItemsPresenter.RenderTransform>
														<TransformGroup>
															<TranslateTransform x:Name="ItemsPresenterTranslateTransform" />
															<CompositeTransform x:Name="ItemsPresenterCompositeTransform" />
														</TransformGroup>
													</ItemsPresenter.RenderTransform>
												</ItemsPresenter>
											</Grid>
										</PivotPanel>
									</ScrollViewer>
								</Grid>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="NoBackgroundAddButton" TargetType="Button">
				<Setter Property="Background" Value="Transparent"/>
			</Style>
		</ResourceDictionary>
	</Page.Resources>
	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
		  Name="RootElement">
		<ScrollViewer>
			<Pivot MinWidth="336"
				HorizontalAlignment="Center"
			   Style="{StaticResource TabsStylePivotStyle}">
				<PivotItem >
					<PivotItem.Header>
						<controls:TabHeader Label="General" Symbol="ContactInfo"/>
					</PivotItem.Header>
					<StackPanel>


						<StackPanel Orientation="Vertical" Name="ClassAndRacePanel"
					BorderBrush="Black"
					BorderThickness="1">
							<Grid Tapped="GeneralTapped">
								<TextBlock Text="General"
							   VerticalAlignment="Center"
							   FontWeight="Bold"/>
								<TextBlock Text="-" FontSize="20" HorizontalAlignment="Right"
							   VerticalAlignment="Center"/>

							</Grid>
							<Grid Name="ClassAndRaceInfo"
				  HorizontalAlignment="Stretch"
				  >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="2*"/>
									<RowDefinition Height="2*"/>
									<RowDefinition Height="2*"/>
									<RowDefinition Height="2*"/>
								</Grid.RowDefinitions>
								<StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
									<TextBox Text="{Binding Campaign, Mode=TwoWay}"/>
									<TextBlock Text="Campaign"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="1"
								 Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Name, Mode=TwoWay}" />
									<TextBlock Text="Name"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1"
								 Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Class, Mode=TwoWay}" />
									<TextBlock Text="Class"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="3"
								 Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Level, Mode=TwoWay}"
											 InputScope="Number"/>
									<TextBlock Text="Level"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2"
								 Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Race, Mode=TwoWay}" />
									<TextBlock Text="Race"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2"
								Margin="4, 0, 4, 0">
									<ComboBox ItemsSource="{Binding Alignments}"
											  SelectedIndex="{Binding SelectedAlignment}" 
											  HorizontalAlignment="Stretch"
											  PlaceholderText="Alignment"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="3"
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Experience, Mode=TwoWay}" 
											 InputScope="Number"/>
									<TextBlock Text="Experience"/>
								</StackPanel>
							</Grid>
						</StackPanel>
						<StackPanel Orientation="Vertical" RelativePanel.Below="ClassAndRacePanel"
					Name="PhysicalDescriptionPanel"
					BorderBrush="Black"
					BorderThickness="1">
							<Grid Tapped="PhysicalDescriptionHeaderTapped">
								<TextBlock Text="Physical Description"
						   FontWeight="Bold"/>
								<TextBlock Text="-" FontSize="20" HorizontalAlignment="Right"
							   VerticalAlignment="Center"/>

							</Grid>


							<Grid Name="PhysicalDescription">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="3*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="2*"/>
									<RowDefinition Height="2*"/>
									<RowDefinition Height="2*"/>
								</Grid.RowDefinitions>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0" 
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Age, Mode=TwoWay}"
											 InputScope="Number"/>

									<TextBlock Text="Age"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="1"
								 Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Height, Mode=TwoWay}" />

									<TextBlock Text="Height"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2" 
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Weight, Mode=TwoWay}"/>

									<TextBlock Text="Weight"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0"
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Eyes, Mode=TwoWay}" />

									<TextBlock Text="Eyes"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1"
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Skin, Mode=TwoWay}" />

									<TextBlock Text="Skin"/>
								</StackPanel>
								<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2"
								Margin="4, 0, 4, 0">
									<TextBox Text="{Binding Hair, Mode=TwoWay}" />

									<TextBlock Text="Hair"/>
								</StackPanel>
							</Grid>
						</StackPanel>
						<StackPanel Name="LanguageStackPAnel">
							<TextBlock Text="Languages Known"/>
							<GridView ItemsSource="{Binding Languages}"/>
							<Button Style="{StaticResource NoBackgroundAddButton}"
									Name="AddNewLangButton">
								<Button.Content>
									<StackPanel Orientation="Horizontal">
										<SymbolIcon Symbol="Add"/>
										<TextBlock Text="Add Language"/>
									</StackPanel>
								</Button.Content>
								<Button.Flyout>
									<Flyout>
										<StackPanel MinWidth="96">
											
											<TextBox Name="NewLanguageBox"
													 Margin="4"
													 PlaceholderText="Language"
													 />
											<Button Command="{Binding Add}"
													CommandParameter="{Binding ElementName=NewLanguageBox, Path=Text}"
													Tapped="AddNewLangTapped"
													Content="Add Language"/>
										</StackPanel>
									</Flyout>
								</Button.Flyout>
							</Button>
						</StackPanel>

						<StackPanel Name="CharacterPersonality" Orientation="Vertical">
							<TextBlock Text="Personality Traits"/>
							<TextBox Height="96" Text="{Binding PersonalityTraits, Mode=TwoWay}" 
									 TextWrapping="Wrap" AcceptsReturn="True"/>
							<TextBlock Text="Ideals"/>
							<TextBox Height="96" Text="{Binding Ideals, Mode=TwoWay}" 
									 TextWrapping="Wrap" AcceptsReturn="True"/>
							<TextBlock Text="Bonds"/>
							<TextBox Height="96" Text="{Binding Bonds, Mode=TwoWay}" 
									 TextWrapping="Wrap" AcceptsReturn="True"/>
							<TextBlock Text="Flaws"/>
							<TextBox Height="96" Text="{Binding Flaws, Mode=TwoWay}"
									 TextWrapping="Wrap" AcceptsReturn="True"/>

						</StackPanel>

					</StackPanel>
				</PivotItem>
				<PivotItem>

					<PivotItem.Header>
						<controls:TabHeader Label="Ability Scores&#x0a;&amp; Skills" Symbol="List"/>
					</PivotItem.Header>
					<StackPanel>
						<Grid Name="CombatInfoPanel"
							  Margin="0, 0, 0, 8">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="3*"/>
								<RowDefinition Height="14"/>
								<RowDefinition Height="3*"/>
								<RowDefinition Height="3*"/>

							</Grid.RowDefinitions>


							<StackPanel Orientation="Vertical"
								 Margin="4, 0, 4, 0">
								<TextBox Text="{Binding ArmorClass, Mode=TwoWay}" />
								<TextBlock Text="AC" HorizontalAlignment="Center"/>
							</StackPanel>
							<StackPanel Orientation="Vertical" 
								 Margin="4, 0, 4, 0" Grid.Row="0" Grid.Column="1">
								<TextBox Text="{Binding Initiative, Mode=TwoWay}" />
								<TextBlock Text="Initiative" HorizontalAlignment="Center"/>
							</StackPanel>
							<StackPanel Orientation="Vertical"
								 Margin="4, 0, 4, 0" Grid.Column="2">
								<TextBox Text="{Binding Speed, Mode=TwoWay}" />
								<TextBlock Text="Speed" HorizontalAlignment="Center"/>
							</StackPanel>
							<StackPanel Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="2"
										>
								<StackPanel Orientation="Horizontal"
											Name="HealthBoxes">
									<TextBox Name="CurrentHP" FontSize="16" PlaceholderText="HP"
											 Text="{Binding CurrentHealth, Mode=TwoWay}"
											  Margin="4, 0, 4, 0"></TextBox>
									<TextBlock Text="/" FontSize="16"
											   />
									<TextBox Name="MaxHP" FontSize="16" TextAlignment="Center" IsTextPredictionEnabled="False"
											 PlaceholderText="Max HP"
											 Text="{Binding MaxHealth, Mode=TwoWay}"></TextBox>
								</StackPanel>

								<TextBlock Text="Hit Points" Margin="42, 0, 0, 0"/>
							</StackPanel>
							<StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
								<TextBlock Text="Death Saves" HorizontalAlignment="Center"/>
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Successes"
											   Margin="4"/>
									<CheckBox MinWidth="18"
											  IsChecked="{Binding DeathSaveSuccesses[0], Mode=TwoWay}"/>
									<CheckBox MinWidth="18" 
											   IsChecked="{Binding DeathSaveSuccesses[1], Mode=TwoWay}"/>
									<CheckBox  MinWidth="18"
											    IsChecked="{Binding DeathSaveSuccesses[2], Mode=TwoWay}"/>

									<TextBlock Text="Fails" Margin="4"/>
									<CheckBox  MinWidth="18"
											    IsChecked="{Binding DeathSaveFails[0], Mode=TwoWay}"/>
									<CheckBox  MinWidth="18"
											   IsChecked="{Binding DeathSaveFails[1], Mode=TwoWay}"/>
									<CheckBox  MinWidth="18"
											   IsChecked="{Binding DeathSaveFails[2], Mode=TwoWay}"/>

								</StackPanel>
							</StackPanel>
							<StackPanel Orientation="Vertical" Grid.Column="3" Grid.Row="2" Grid.ColumnSpan="2"
										Margin="0, 0, 4, 0">
								<TextBox Text="{Binding TemporaryHealth, Mode=TwoWay}"/>
								<TextBlock 
									Text="Temporary Hit Points" TextWrapping="Wrap" MaxLines="1"
									
									Margin="-32, 0, 0, 0"
									HorizontalAlignment="Right"/>
							</StackPanel>
						</Grid>
						<StackPanel Name="AbilityScoresStackPanel"
					Orientation="Vertical"
					
					BorderBrush="Black"
					BorderThickness="1">

							<Grid Tapped="AbilityScoresHeaderTapped">
								<TextBlock Text="Ability Scores"
						   FontWeight="Bold"
							VerticalAlignment="Center"/>
								<TextBlock Text="-" FontSize="20" HorizontalAlignment="Right"
							   VerticalAlignment="Center"/>

							</Grid>
							<VariableSizedWrapGrid MaximumRowsOrColumns="3"
								   Orientation="Horizontal"
								   Name="AbilityScores">

								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Strength, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding StrIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											  MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Strength" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding StrengthMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>




								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Dexterity, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding DexIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											 MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Dexterity" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding DexterityMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>
								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Constitution, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding ConIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											 MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Constitution" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding ConstitutionMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>

								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Intelligence, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding IntIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											  MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Intelligence" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding IntelligenceMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>
								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Wisdom, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding WisIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											 MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Wisdom" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding WisdomMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>

								<Grid Margin="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<TextBox Text="{Binding Charisma, Mode=TwoWay}"
											 Grid.Column="0" Grid.Row="0"/>
									<CheckBox IsChecked="{Binding ChaIsProficient, Mode=TwoWay}"
											  Grid.Row="0" Grid.Column="1"
											  MinWidth="28"
											  Margin="4"/>

									<TextBlock Text="Charisma" VerticalAlignment="Center"
											   Grid.Row="1" Grid.Column="0"/>
									<TextBlock Text="{Binding CharismaMod}" HorizontalAlignment="Right"
												   Margin="20, 0, 0, 0"
												   Foreground="DarkSlateGray"
											   Grid.Row="1" Grid.Column="1"/>

								</Grid>






							</VariableSizedWrapGrid>
						</StackPanel>

						<GridView Name="Skills"
				  ItemTemplate="{StaticResource Skill}"
				  ItemsSource="{Binding Skills, Mode=TwoWay}">

						</GridView>
						<ListView ItemsSource="{Binding CharTraits, Mode=TwoWay}"
								  ItemTemplate="{StaticResource CharacterTrait}"/>
						<Button Background="Transparent" Name="AddTraitButton">
							<Button.Content>
								<StackPanel Orientation="Horizontal">
									<SymbolIcon Symbol="Add"/>
									<TextBlock Text="Add Feature or Trait"/>
								</StackPanel>
							</Button.Content>
							<Button.Flyout>
								<Flyout>
									<StackPanel MinWidth="250">
										<TextBox PlaceholderText="Description"
												 Height="96"
												 Margin="4"
												 Text="{Binding NewTraitDesc, Mode=TwoWay}"/>
										<StackPanel Orientation="Horizontal">
										<ComboBox ItemsSource="{Binding TraitStatBonuses}"/>
											<TextBox Text="{Binding NewTraitStatBonus}"/>
										</StackPanel>
										<StackPanel Orientation="Horizontal">
											<Button Content="+ Add Trait" Margin="4"
													Command="{Binding AddNewCharTrait}"
													Tapped="AddTraitTapped"/>
											<CheckBox Content="Has Context-based stat bonus"
													  Name="NewTraitHasStatBonusCheckbox"></CheckBox>
										</StackPanel>
									</StackPanel>
								</Flyout>
							</Button.Flyout>
						</Button>
					</StackPanel>
				</PivotItem>
				<PivotItem>
					<PivotItem.Header>
						<controls:TabHeader Label="Inventory" Symbol="Tag"/>
					</PivotItem.Header>
					<StackPanel>
						<TextBlock Text="Weapons"/>
						<ListView ItemsSource="{Binding Weapons, Mode=TwoWay}"
								  ItemTemplate="{StaticResource Weapon}"
							  />
						<Button Style="{StaticResource NoBackgroundAddButton}" HorizontalAlignment="Right"
								Name="AddWeaponButton">
							<Button.Flyout>
								<Flyout>
									<StackPanel MinWidth="150">
										<TextBox PlaceholderText="Name" Margin="4"
												 Text="{Binding NewWepName, Mode=TwoWay}"/>
										<TextBox PlaceholderText="Damage"
												 Margin="4"
												 Text="{Binding NewWepDamage, Mode=TwoWay}"/>
										<TextBox PlaceholderText="Description (Optional)"
												 Margin="4"
												 Text="{Binding NewWepDesc, Mode=TwoWay}"/>
										<StackPanel Orientation="Horizontal">
											<CheckBox Content="Also Add to Compendium"
													  Margin="4"
													  IsChecked="{Binding AddItemToGlobalList, Mode=TwoWay}"/>
											<Button Content="+ Add Item" Margin="4"
												Command="{Binding AddNewWeapon}"
													Tapped="AddWeaponButtonTapped"/>
										</StackPanel>
									</StackPanel>
								</Flyout>
							</Button.Flyout>
							<Button.Content>
								<StackPanel Orientation="Horizontal">
									<SymbolIcon Symbol="Add"/>
									<TextBlock Text="Add new Weapon" Margin="4, 0, 0, 0"/>
								</StackPanel>
							</Button.Content>
						</Button>
						<TextBlock Text="Items"/>
						<ListView ItemsSource="{Binding Items}"
								  ItemTemplate="{StaticResource Item}"
							  />
						<Button Style="{StaticResource NoBackgroundAddButton}" HorizontalAlignment="Right"
								Name="AddItemButton">
							<Button.Flyout>
								<Flyout>
									<StackPanel MinWidth="150">
										<TextBox PlaceholderText="Name" Margin="4"
												 Text="{Binding NewItemName, Mode=TwoWay}"/>
										<TextBox PlaceholderText="Description"
												 Height="96"
												 Margin="4"
												 Text="{Binding NewItemDesc, Mode=TwoWay}"/>
										<StackPanel Orientation="Horizontal">
											<CheckBox Content="Also Add to Compendium"
													  Margin="4"
													  IsChecked="{Binding AddItemToGlobalList, Mode=TwoWay}"/>
											<Button Content="+ Add Item" Margin="4"
												Command="{Binding AddNewItem}"/>
										</StackPanel>
									</StackPanel>
								</Flyout>
							</Button.Flyout>
							<Button.Content>
								<StackPanel Orientation="Horizontal">
									<SymbolIcon Symbol="Add"/>
									<TextBlock Text="Add new Item" Margin="4, 0, 0, 0"
											   Tapped="AddItemButtonTapped"/>
								</StackPanel>
							</Button.Content>
						</Button>
					</StackPanel>
				</PivotItem>
				<PivotItem>
					<PivotItem.Header>
						<controls:TabHeader Label="Spells" Symbol="Library"/>
					</PivotItem.Header>
					<StackPanel>
						<ListView ItemsSource="{Binding Spells}"
						  ItemTemplate="{StaticResource Spell}"/>
						<Button Style="{StaticResource NoBackgroundAddButton}" HorizontalAlignment="Right"
								Name="AddSpellButton">

							<Button.Flyout>
								<Flyout>
									<StackPanel MinWidth="150">
										<StackPanel Orientation="Horizontal">
											<TextBox PlaceholderText="Name" Margin="4"
												 Text="{Binding NewSpellName, Mode=TwoWay}"
												 MinWidth="240"/>
											<TextBox Text="{Binding NewSpellLevel, Mode=TwoWay}" PlaceholderText="Level" Margin="4"/>
										</StackPanel>
										<StackPanel Orientation="Horizontal">
											<CheckBox IsChecked="{Binding NSpellHasV}"
													  Content="V" MinWidth="40"/>
											<CheckBox IsChecked="{Binding NSpellHasS}"
													  Content="V" MinWidth="44"/>
											<TextBox Text="{Binding NSpellMat}"
													 PlaceholderText="Material"
													 MinWidth="120"/>
										</StackPanel>
										<TextBox PlaceholderText="Description"
												 Height="96"
												 Margin="4"
												 Text="{Binding NewSpellDesc, Mode=TwoWay}"
												 AcceptsReturn="True"
												 TextWrapping="Wrap"/>
										<StackPanel Orientation="Horizontal">
											<CheckBox Content="Also Add to Compendium"
													  Margin="4"
													  IsChecked="{Binding AddSpellToGlobalList, Mode=TwoWay}"/>
											<Button Content="+ Add Spell" Margin="4"
												Command="{Binding AddNewSpell, Mode=TwoWay}"
												Tapped="AddSpellButtonTapped"/>
										</StackPanel>
									</StackPanel>
								</Flyout>
							</Button.Flyout>
							<Button.Content>
								<StackPanel Orientation="Horizontal">
									<SymbolIcon Symbol="Add"/>
									<TextBlock Text="Add new Spell" Margin="4, 0, 0, 0"/>
								</StackPanel>
							</Button.Content>
						</Button>
					</StackPanel>
				</PivotItem>
				<PivotItem>
					<PivotItem.Header>
						<controls:TabHeader Label="Misc" Symbol="Bullets"/>
					</PivotItem.Header>
					<StackPanel>
						<TextBlock Text="Backstory" />
						<TextBox MinHeight="192" Text="{Binding Backstory, Mode=TwoWay}" 
									 TextWrapping="Wrap" AcceptsReturn="True"/>
						<TextBlock Text="Religion"/>
						<TextBox Text="{Binding God}"
								 PlaceholderText="God(s)"/>
						<TextBlock Text="Relationships/Allies"/>
						<TextBox Text="{Binding Relationships}"
								 MinHeight="96"
								 AcceptsReturn="True" TextWrapping="Wrap"/>
						<TextBlock Text="Other Notes"/>
						<TextBox Text="{Binding Notes}"
								 MinHeight="96"
								 AcceptsReturn="True" TextWrapping="Wrap"/>
					</StackPanel>
				</PivotItem>
			</Pivot>
		</ScrollViewer>
	</Grid>
</Page>
	
	