<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="using:TabletopRolePlayingCharacterManager"
					xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
					xmlns:core="using:Microsoft.Xaml.Interactions.Core">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Assets/ColorDict.xaml"></ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>
	<DataTemplate x:Key="Skill">
		<StackPanel Orientation="Vertical"
					Margin="4, 0, 4, 0"
					BorderBrush="DarkGray"
					BorderThickness="2">
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="{Binding Path=Name, Mode=TwoWay}"
						   VerticalAlignment="Center"
						   MinWidth="112" />

			</StackPanel>
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="{Binding Path=Bonus, Mode=TwoWay}"
						   Margin="8"
						   FontSize="18" />
				<CheckBox IsChecked="{Binding Path=IsProficient, Mode=TwoWay}"
						  MinWidth="32" />
				<TextBlock Text="{Binding Path=MainStat}"
						   HorizontalAlignment="Right"
						   Foreground="#FF7E7E7E"
						   Margin="4,0,0,0" />
			</StackPanel>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="ProficiencyTemplate">
		<StackPanel Orientation="Horizontal"
					Background="{StaticResource AccentColorBrush}"
					BorderThickness="1"
					Margin="0">

			<StackPanel.BorderBrush>
				<SolidColorBrush Color="{ThemeResource SystemBaseLowColor}" />
			</StackPanel.BorderBrush>
			<TextBlock Text="{Binding Name}"
					   Margin="4"
					   VerticalAlignment="Center"
					   HorizontalAlignment="Center" />

			<Button Command="{Binding RemoveProficiency}"
					Background="#FF7C7C7C"
					Margin="4, 0, 0, 0"
					BorderThickness="1">
				<SymbolIcon Symbol="Cancel" />
			</Button>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="Item">
		<StackPanel Margin="4"
					MinWidth="150">
			<TextBox Text="{Binding Path=Name, Mode=TwoWay}"
					 Margin="0, 4" />
			<TextBox Text="{Binding Path=Description, Mode=TwoWay}"
					 TextWrapping="Wrap"
					 MinHeight="48"
					 AcceptsReturn="True" />
		</StackPanel>

	</DataTemplate>
	<DataTemplate x:Key="Weapon">
		<StackPanel>
			<StackPanel Margin="4">
				<TextBlock Text="{Binding Name}" 
						   FontSize="18"
						   FontWeight="Bold"/>
				<StackPanel Orientation="Horizontal"
							Margin="0, 4">
					<TextBlock Text="Attack Bonus: "
							   Margin="0, 0, 4, 0"/>
					<TextBlock Text="{Binding AttackBonus}"
							   Margin="0, 0, 4, 0"/>
					
					<TextBlock Text="Damage: "
							   Margin="0, 0, 4, 0"/>
					<TextBlock Text="{Binding Damage}" />
				</StackPanel>
				<TextBlock Text="{Binding Description}"/>
			</StackPanel>
			<StackPanel Margin="4">
				<StackPanel Orientation="Horizontal"
							Margin="0,0,0,4">
					<TextBox Text="{Binding Name, Mode=TwoWay}"
							 Margin="0,0, 4, 0"
							 MinWidth="96" />
					<TextBox Text="{Binding Damage, Mode=TwoWay}"
							 Margin="0, 0, 4, 0"
							 PlaceholderText="1d6 + 1, 1d8, etc." />
					<TextBox Text="{Binding AttackBonus, Mode=TwoWay}"
							 PlaceholderText="Attack Bonus" />


				</StackPanel>
				<StackPanel Orientation="Horizontal"
							Margin="0,0,0,4">
					<ComboBox ItemsSource="{Binding MainStat}"
							  SelectedIndex="{Binding SelectedMainStat, Mode=TwoWay}"
							  Margin="0, 0, 4, 0" />
					<ComboBox ItemsSource="{Binding WeaponTypes}"
							  SelectedIndex="{Binding SelectedWeaponType, Mode=TwoWay}" />
				</StackPanel>
				<TextBox Text="{Binding Description, Mode=TwoWay}"
						 PlaceholderText="Description"
						 AcceptsReturn="True"
						 MinHeight="48"
						 Margin="0, 4, 0, 0"
						 TextWrapping="Wrap" />
				<Button Command="{Binding RemoveWeapon}"
						CommandParameter="{Binding}"
						Margin="0, 4">
					<Button.Content>
						<StackPanel>
							<SymbolIcon Symbol="Delete" />
						</StackPanel>
					</Button.Content>
				</Button>
			</StackPanel>

		</StackPanel>
	</DataTemplate>


	<DataTemplate x:Key="Spell">
		<StackPanel>
			<StackPanel Visibility="{Binding IsNotEditing}"
						MinWidth="150"
						Width="200"
						HorizontalAlignment="Stretch">
				<TextBlock Text="{Binding Name}"
						   FontSize="20"
						   FontWeight="Bold" />
				<StackPanel Orientation="Horizontal">

					<TextBlock Text="{Binding LevelAndSchool}"
							   HorizontalAlignment="Right"
							   FontStyle="Italic" />
				</StackPanel>
				<TextBlock Text="Description"
						   FontSize="18" />
				<ScrollViewer MaxHeight="150"
							  MinHeight="24">
					<TextBlock Text="{Binding Description}" />
				</ScrollViewer>
				<TextBlock Text="At Higher Levels"
						   FontSize="18" />
				<ScrollViewer MaxHeight="150"
							  MinHeight="24">
					<TextBlock Text="{Binding HigherLevels}" />
				</ScrollViewer>

				<Button Content="{Binding AttackButtonText}"
						Visibility="{Binding IsAttack}"
						HorizontalAlignment="Stretch"
						Command="{Binding RollAttack}"
						Tag="RollAttackButton"/>
			</StackPanel>

			<Grid Margin="4, 0"
				  Visibility="{Binding IsEditing}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="0" />
					<RowDefinition Height="32" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<TextBox PlaceholderText="Name"
						 Text="{Binding Name, Mode=TwoWay}"
						 MinWidth="240"
						 Grid.Row="0"
						 Grid.Column="0"
						 Grid.ColumnSpan="2" />
				<StackPanel Margin="0,4"
							Grid.Row="1"
							Grid.Column="0"
							HorizontalAlignment="Stretch">

					<ComboBox ItemsSource="{Binding Levels}"
							  SelectedIndex="{Binding LevelIndex, Mode=TwoWay}"
							  PlaceholderText="Level"
							  HorizontalAlignment="Stretch"
							  MinWidth="120"
							  Margin="0, 0, 4, 4" />
					<TextBox Text="{Binding Target, Mode=TwoWay}"
							 PlaceholderText="Target"
							 MinWidth="120"
							 HorizontalAlignment="Stretch"
							 Margin="0, 0, 4, 0" />

				</StackPanel>
				<StackPanel Grid.Column="1"
							Margin="0, 4"
							Grid.Row="1">
					<ComboBox ItemsSource="{Binding SpellSchools}"
							  SelectedIndex="{Binding SchoolIndex, Mode=TwoWay}"
							  HorizontalAlignment="Stretch"
							  MinWidth="120"
							  PlaceholderText="School"
							  Margin="0, 0 ,0 ,4" />
					<TextBox Text="{Binding Range, Mode=TwoWay}"
							 PlaceholderText="Range"
							 MinWidth="120"
							 HorizontalAlignment="Stretch" />


				</StackPanel>
				<StackPanel Orientation="Horizontal"
							Grid.Row="3"
							Grid.Column="0"
							Grid.ColumnSpan="2">
					<CheckBox IsChecked="{Binding HasVerbalComponent, Mode=TwoWay}"
							  Content="Verbal"
							  MinWidth="40"
							  Margin="0, 0, 4, 0" />
					<CheckBox IsChecked="{Binding HasSOmaticComponent, Mode=TwoWay}"
							  Content="Somatic"
							  MinWidth="44"
							  Margin="0, 0, 4, 0" />
					<TextBox Text="{Binding Material, Mode=TwoWay}"
							 PlaceholderText="Material"
							 MinWidth="120" />
				</StackPanel>
				<StackPanel Grid.Row="4"
							Grid.Column="0"
							Grid.ColumnSpan="2">
					<TextBlock Text="Description" />
					<TextBox Height="96"
							 Margin="0"
							 Text="{Binding Description, Mode=TwoWay}"
							 AcceptsReturn="True"
							 TextWrapping="Wrap" />
				</StackPanel>
				<StackPanel Grid.Row="5"
							Grid.Column="0"
							Grid.ColumnSpan="2">
					<TextBlock Text="At Higher Levels" />
					<TextBox Text="{Binding HigherLevels, Mode=TwoWay}"
							 AcceptsReturn="True"
							 TextWrapping="Wrap"
							 MinHeight="72" />
				</StackPanel>
				<StackPanel Grid.Row="6"
							Grid.Column="0"
							Grid.ColumnSpan="2">
					<ToggleSwitch IsOn="{Binding IsAttack, Mode=TwoWay}"
								  OffContent="Is Attack"
								  OnContent="Is Attack"
								  Margin="0" />
					<StackPanel Name="AttackStatsPanel"
								Margin="0"
								Visibility="Visible">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Damage: "
									   VerticalAlignment="Center" />
							<TextBox Text="{Binding Damage, Mode=TwoWay}"
									 Margin="4, 0, 0, 0"
									 MinWidth="60" />
							<TextBlock Text="Type: "
									   VerticalAlignment="Center"
									   Margin="4, 0, 0, 0" />
							<TextBox Text="{Binding DamageType, Mode=TwoWay}"
									 Margin="4, 0, 0, 0"
									 MinWidth="96"
									 PlaceholderText="Necrotic, etc." />
						</StackPanel>
						<StackPanel Orientation="Horizontal"
									Margin="0, 4, 0, 0">
							<TextBlock Text="Higher Level Cast Damage: "
									   VerticalAlignment="Center" />
							<TextBox Text="{Binding HigherLevelDamage, Mode=TwoWay}"
									 Margin="4, 0, 0, 0" />
						</StackPanel>
						<CheckBox Content="Add Ability Modifier to damage?"
								  IsChecked="{Binding AddAbilityModToDamage}"></CheckBox>
						<StackPanel Name="AttackRollPanel"
									Margin="4">

						</StackPanel>
						<StackPanel Orientation="Horizontal"
									Margin="0, 4, 0, 0">
							<TextBlock Text="Range: "
									   VerticalAlignment="Center" />
							<ComboBox SelectedIndex="{Binding RangeTypeIndex, Mode=TwoWay}"
									  MinWidth="96"
									  ItemsSource="{Binding RangeTypes}"
									  Margin="4, 0, 0, 0">
							</ComboBox>

						</StackPanel>
						<ToggleSwitch OnContent="Saving throw"
									  OffContent="Attack roll"
									  IsOn="{Binding IsSavingThrow, Mode=TwoWay}" />
						<StackPanel Name="SavingThrowPanel"
									Margin="4"
									Visibility="Collapsed">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Saving Attribute: "
										   VerticalAlignment="Center" />
								<ComboBox ItemsSource="{Binding Attributes}"
										  SelectedIndex="{Binding SavingThrowAttributeIndex, Mode=TwoWay}"
										  Margin="4, 0, 0, 0" />

							</StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Effect: "
										   VerticalAlignment="Center" />
								<TextBox Text="{Binding SavingThrowEffect, Mode=TwoWay}"
										 Margin="4, 0, 0, 0" />
							</StackPanel>
						</StackPanel>
					</StackPanel>
				</StackPanel>
				<Button HorizontalAlignment="Stretch"
						Command="{Binding StopEditing}"
						Background="{StaticResource AccentColorBrush}"
						Content="Done"
						Grid.Row="7"
						Grid.ColumnSpan="2"
						Grid.Column="0" />
			</Grid>
		</StackPanel>
	</DataTemplate>
	<DataTemplate x:Key="CharacterTrait">
		<StackPanel>
			<interactivity:Interaction.Behaviors>
				<core:EventTriggerBehavior SourceObject="{Binding ElementName=DescTextBlock}"
										   EventName="LostFocus">
					<core:InvokeCommandAction Command="{Binding StopEditing}"></core:InvokeCommandAction>
				</core:EventTriggerBehavior>
			</interactivity:Interaction.Behaviors>
			<TextBlock Text="{Binding Description, Mode=TwoWay}"
					   MinHeight="72"
					   TextWrapping="WrapWholeWords"
					   Name="DescTextBlock"
					   Visibility="{Binding IsNotEditing}"
					   AllowFocusOnInteraction="True">


			</TextBlock>
			<TextBox Text="{Binding Description, Mode=TwoWay}"
					 Visibility="{Binding IsEditing}"
					 Name="DescTextBox"
					 MinHeight="72"
					 TextWrapping="Wrap"
					 AllowFocusOnInteraction="True"
					 AcceptsReturn="True">
				<interactivity:Interaction.Behaviors>
					<core:EventTriggerBehavior SourceObject="{Binding ElementName=DescTextBlock}"
											   EventName="LostFocus">
						<core:InvokeCommandAction Command="{Binding StopEditing}"></core:InvokeCommandAction>
					</core:EventTriggerBehavior>
					<core:EventTriggerBehavior SourceObject="{Binding ElementName=DescTextBlock}"
											   EventName="KeyDown">
						<core:InvokeCommandAction Command="{Binding StopEditingEnter}"></core:InvokeCommandAction>
					</core:EventTriggerBehavior>
				</interactivity:Interaction.Behaviors>
			</TextBox>
			<Button Content="Done"
					Command="{Binding StopEditing}"
					Visibility="{Binding IsEditing}"
					Margin="4"
					HorizontalAlignment="Stretch"></Button>
		</StackPanel>
	</DataTemplate>
</ResourceDictionary>

